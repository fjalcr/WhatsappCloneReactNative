{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/frontend/Documents/clones/native/WhatsappCloneReactNative/components/InputBox/index.tsx\";\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { MaterialCommunityIcons, FontAwesome5, Fontisto } from '@expo/vector-icons';\nimport Styles from \"./styles\";\n\nvar InputBox = function InputBox() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputText = _useState2[0],\n      setInputText = _useState2[1];\n\n  var messageSend = function messageSend() {\n    console.warn('message send');\n    setInputText('');\n  };\n\n  var microPress = function microPress() {\n    console.warn('miclrophone press');\n  };\n\n  var handlerPress = function handlerPress() {\n    !inputText ? microPress() : messageSend();\n  };\n\n  return React.createElement(KeyboardAvoidingView, {\n    behavior: Platform.OS == \"ios\" ? 'padding' : \"height\",\n    keyboardVerticalOffset: 65,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: Styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: Styles.leftContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, React.createElement(FontAwesome5, {\n    name: \"laugh-beam\",\n    size: 20,\n    color: \"grey\",\n    style: Styles.icon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"type samething...\",\n    style: Styles.input,\n    multiline: true,\n    value: inputText,\n    onChangeText: setInputText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }), React.createElement(FontAwesome5, {\n    name: \"paperclip\",\n    size: 20,\n    color: \"grey\",\n    style: Styles.icon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }), inputText == '' ? React.createElement(Fontisto, {\n    name: \"camera\",\n    size: 20,\n    color: \"grey\",\n    style: Styles.icon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 22\n    }\n  }) : null), React.createElement(View, {\n    style: Styles.rightContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, React.createElement(MaterialCommunityIcons, {\n    onPress: function onPress() {\n      return handlerPress();\n    },\n    name: \"\" + (inputText == '' ? 'microphone' : 'send'),\n    size: 24,\n    color: \"white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }))));\n};\n\nexport default InputBox;","map":{"version":3,"sources":["/Users/frontend/Documents/clones/native/WhatsappCloneReactNative/components/InputBox/index.tsx"],"names":["React","useState","MaterialCommunityIcons","FontAwesome5","Fontisto","Styles","InputBox","inputText","setInputText","messageSend","console","warn","microPress","handlerPress","Platform","OS","container","leftContainer","icon","input","rightContainer"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;;AAEA,SAAQC,sBAAR,EAAgCC,YAAhC,EAA8CC,QAA9C,QAA6D,oBAA7D;AACA,OAAOC,MAAP;;AACA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA,kBACiBL,QAAQ,CAAC,EAAD,CADzB;AAAA;AAAA,MACXM,SADW;AAAA,MACAC,YADA;;AAGnB,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtBC,IAAAA,OAAO,CAACC,IAAR,CAAa,cAAb;AACAH,IAAAA,YAAY,CAAC,EAAD,CAAZ;AAEH,GAJD;;AAKA,MAAMI,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrBF,IAAAA,OAAO,CAACC,IAAR,CAAa,mBAAb;AAEH,GAHD;;AAIA,MAAME,YAAY,GAAG,SAAfA,YAAe,GAAM;AACvB,KAACN,SAAD,GAAaK,UAAU,EAAvB,GAA4BH,WAAW,EAAvC;AACH,GAFD;;AAGA,SACI,oBAAC,oBAAD;AACA,IAAA,QAAQ,EAAEK,QAAQ,CAACC,EAAT,IAAe,KAAf,GAAuB,SAAvB,GAAmC,QAD7C;AAEA,IAAA,sBAAsB,EAAE,EAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEV,MAAM,CAACW,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEX,MAAM,CAACY,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,YAAnB;AAAgC,IAAA,IAAI,EAAE,EAAtC;AAA0C,IAAA,KAAK,EAAC,MAAhD;AAAuD,IAAA,KAAK,EAAEZ,MAAM,CAACa,IAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,SAAD;AACI,IAAA,WAAW,EAAC,mBADhB;AAEI,IAAA,KAAK,EAAEb,MAAM,CAACc,KAFlB;AAGI,IAAA,SAAS,MAHb;AAII,IAAA,KAAK,EAAEZ,SAJX;AAKI,IAAA,YAAY,EAAEC,YALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EASI,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,WAAnB;AAA+B,IAAA,IAAI,EAAE,EAArC;AAAyC,IAAA,KAAK,EAAC,MAA/C;AAAsD,IAAA,KAAK,EAAEH,MAAM,CAACa,IAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,EAWQX,SAAS,IAAI,EAAb,GACC,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAC,QAAf;AAAwB,IAAA,IAAI,EAAE,EAA9B;AAAkC,IAAA,KAAK,EAAC,MAAxC;AAA+C,IAAA,KAAK,EAAEF,MAAM,CAACa,IAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAEC,IAbT,CADJ,EAiBI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEb,MAAM,CAACe,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,sBAAD;AACI,IAAA,OAAO,EAAE;AAAA,aAAMP,YAAY,EAAlB;AAAA,KADb;AAEI,IAAA,IAAI,QAAKN,SAAS,IAAI,EAAb,GAAkB,YAAlB,GAAiC,MAAtC,CAFR;AAGI,IAAA,IAAI,EAAE,EAHV;AAII,IAAA,KAAK,EAAC,OAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAjBJ,CAHA,CADJ;AA+BH,CA9CD;;AAgDA,eAAeD,QAAf","sourcesContent":["import React, {useState} from 'react';\nimport { View, TextInput, KeyboardAvoidingView, Platform } from 'react-native';\nimport {MaterialCommunityIcons, FontAwesome5, Fontisto} from '@expo/vector-icons';\nimport Styles from './styles';\nconst InputBox = () => {\n    const  [inputText, setInputText]  = useState('');\n\n    const messageSend = () => {\n        console.warn('message send');\n        setInputText('')\n        \n    }\n    const microPress = () => {\n        console.warn('miclrophone press');\n\n    }\n    const handlerPress = () => {\n        !inputText ? microPress() : messageSend()\n    }\n    return (\n        <KeyboardAvoidingView \n        behavior={Platform.OS == \"ios\" ? 'padding' : \"height\"} \n        keyboardVerticalOffset={65}>\n        <View style={Styles.container}>\n            <View style={Styles.leftContainer}>\n                <FontAwesome5 name=\"laugh-beam\" size={20} color=\"grey\" style={Styles.icon} />\n                <TextInput \n                    placeholder=\"type samething...\" \n                    style={Styles.input} \n                    multiline \n                    value={inputText}  \n                    onChangeText={setInputText}\n                />\n                <FontAwesome5 name=\"paperclip\" size={20} color=\"grey\" style={Styles.icon} />\n                {\n                    inputText == ''\n                    ?<Fontisto name=\"camera\" size={20} color=\"grey\" style={Styles.icon} />\n                    :null\n                }\n            </View>\n            <View style={Styles.rightContainer}>\n                <MaterialCommunityIcons \n                    onPress={() => handlerPress()} \n                    name={`${inputText == '' ? 'microphone' : 'send'}`} \n                    size={24} \n                    color=\"white\"/>\n            </View>\n        </View>\n        </KeyboardAvoidingView>\n    );\n};\n\nexport default InputBox;"]},"metadata":{},"sourceType":"module"}