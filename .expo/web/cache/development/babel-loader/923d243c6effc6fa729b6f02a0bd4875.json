{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"/Users/frontend/Documents/clones/native/WhatsappCloneReactNative/navigation/MainTabNavigator.tsx\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { Fontisto } from \"@expo/vector-icons\";\nimport Colors from \"../constants/Colors\";\nimport useColorScheme from \"../hooks/useColorScheme\";\nimport ChatsScreen from \"../screens/ChatsScreen\";\nimport TabTwoScreen from \"../screens/TabTwoScreen\";\nvar MainTab = createMaterialTopTabNavigator();\nexport default function MainTabNavigator() {\n  var _this = this;\n\n  var colorScheme = useColorScheme();\n  return React.createElement(MainTab.Navigator, {\n    initialRouteName: \"Chats\",\n    tabBarOptions: {\n      activeTintColor: Colors[colorScheme].background,\n      style: {\n        backgroundColor: Colors[colorScheme].tint\n      },\n      indicatorStyle: {\n        backgroundColor: Colors[colorScheme].background,\n        height: 4\n      },\n      labelStyle: {\n        fontWeight: 'bold'\n      },\n      showIcon: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, React.createElement(MainTab.Screen, {\n    name: \"Camera\",\n    component: TabOneNavigator,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref) {\n        var color = _ref.color;\n        return React.createElement(Fontisto, {\n          name: \"camera\",\n          color: color,\n          size: 18,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 38\n          }\n        });\n      },\n      tabBarLabel: function tabBarLabel() {\n        return null;\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }), React.createElement(MainTab.Screen, {\n    name: \"Chats\",\n    component: ChatsScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), React.createElement(MainTab.Screen, {\n    name: \"Status\",\n    component: TabTwoNavigator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), React.createElement(MainTab.Screen, {\n    name: \"Calls\",\n    component: TabTwoNavigator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction TabBarIcon(props) {\n  return React.createElement(Ionicons, _extends({\n    size: 30,\n    style: {\n      marginBottom: -3\n    }\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 10\n    }\n  }));\n}\n\nvar TabOneStack = createStackNavigator();\n\nfunction TabOneNavigator() {\n  return React.createElement(TabOneStack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, React.createElement(TabOneStack.Screen, {\n    name: \"TabOneScreen\",\n    component: ChatsScreen,\n    options: {\n      headerTitle: 'Tab One Title'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar TabTwoStack = createStackNavigator();\n\nfunction TabTwoNavigator() {\n  return React.createElement(TabTwoStack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, React.createElement(TabTwoStack.Screen, {\n    name: \"TabTwoScreen\",\n    component: TabTwoScreen,\n    options: {\n      headerTitle: 'Tab Two Title'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/frontend/Documents/clones/native/WhatsappCloneReactNative/navigation/MainTabNavigator.tsx"],"names":["Ionicons","createMaterialTopTabNavigator","createStackNavigator","React","Fontisto","Colors","useColorScheme","ChatsScreen","TabTwoScreen","MainTab","MainTabNavigator","colorScheme","activeTintColor","background","style","backgroundColor","tint","indicatorStyle","height","labelStyle","fontWeight","showIcon","TabOneNavigator","tabBarIcon","color","tabBarLabel","TabTwoNavigator","TabBarIcon","props","marginBottom","TabOneStack","headerTitle","TabTwoStack"],"mappings":"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","sourcesContent":["import { Ionicons } from '@expo/vector-icons';\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\n\nimport { Fontisto } from \"@expo/vector-icons\";\n\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\nimport ChatsScreen from '../screens/ChatsScreen';\nimport TabTwoScreen from '../screens/TabTwoScreen';\nimport { MainTabParamList, TabOneParamList, TabTwoParamList } from '../types';\n\nconst MainTab = createMaterialTopTabNavigator<MainTabParamList>();\n\nexport default function MainTabNavigator() {\n  const colorScheme = useColorScheme();\n\n  return (\n    <MainTab.Navigator\n      initialRouteName=\"Chats\"\n      tabBarOptions={{\n        activeTintColor: Colors[colorScheme].background,\n        style: {\n          backgroundColor: Colors[colorScheme].tint,\n        },\n        indicatorStyle: {\n          backgroundColor: Colors[colorScheme].background,\n          height: 4,\n        },\n        labelStyle: {\n          fontWeight: 'bold'\n        },\n        showIcon: true,\n      }}>\n      <MainTab.Screen\n        name=\"Camera\"\n        component={TabOneNavigator}\n        options={{\n          tabBarIcon: ({ color }) => <Fontisto name=\"camera\" color={color} size={18} />,\n          tabBarLabel: () => null\n        }}\n      />\n      <MainTab.Screen\n        name=\"Chats\"\n        component={ChatsScreen}\n      />\n      <MainTab.Screen\n        name=\"Status\"\n        component={TabTwoNavigator}\n      />\n      <MainTab.Screen\n        name=\"Calls\"\n        component={TabTwoNavigator}\n      />\n    </MainTab.Navigator>\n  );\n}\n\n// You can explore the built-in icon families and icons on the web at:\n// https://icons.expo.fyi/\nfunction TabBarIcon(props: { name: string; color: string }) {\n  return <Ionicons size={30} style={{ marginBottom: -3 }} {...props} />;\n}\n\n// Each tab has its own navigation stack, you can read more about this pattern here:\n// https://reactnavigation.org/docs/tab-based-navigation#a-stack-navigator-for-each-tab\nconst TabOneStack = createStackNavigator<TabOneParamList>();\n\nfunction TabOneNavigator() {\n  return (\n    <TabOneStack.Navigator>\n      <TabOneStack.Screen\n        name=\"TabOneScreen\"\n        component={ChatsScreen}\n        options={{ headerTitle: 'Tab One Title' }}\n      />\n    </TabOneStack.Navigator>\n  );\n}\n\nconst TabTwoStack = createStackNavigator<TabTwoParamList>();\n\nfunction TabTwoNavigator() {\n  return (\n    <TabTwoStack.Navigator>\n      <TabTwoStack.Screen\n        name=\"TabTwoScreen\"\n        component={TabTwoScreen}\n        options={{ headerTitle: 'Tab Two Title' }}\n      />\n    </TabTwoStack.Navigator>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}