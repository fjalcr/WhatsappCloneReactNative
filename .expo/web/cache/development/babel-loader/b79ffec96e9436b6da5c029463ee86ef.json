{"ast":null,"code":"export var formatDate = function formatDate(date) {\n  var today = new Date();\n  var givenDate = new Date(date);\n  var diffTime = Math.abs(today - givenDate);\n  var diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n\n  if (diffDays <= 7) {\n    switch (givenDate.getDay()) {\n      case 0:\n        return 'Sunday';\n        break;\n\n      case 1:\n        return 'Monday';\n        break;\n\n      case 2:\n        return 'Tuesday';\n        break;\n\n      case 3:\n        return 'Wednesday';\n        break;\n\n      case 4:\n        return 'Thursday';\n        break;\n\n      case 5:\n        return 'Friday';\n        break;\n\n      case 6:\n        return 'Saturday';\n        break;\n\n      default:\n        return givenDate.toISOString().slice(0, 10);\n        break;\n    }\n  } else {\n    return givenDate.toISOString().slice(0, 10);\n  }\n};","map":{"version":3,"sources":["/Users/frontend/Documents/clones/native/WhatsappCloneReactNative/helpers/index.ts"],"names":["formatDate","date","today","Date","givenDate","diffTime","Math","abs","diffDays","ceil","getDay","toISOString","slice"],"mappings":"AAAA,OAAO,IAAMA,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD,EAAU;AAChC,MAAMC,KAAU,GAAG,IAAIC,IAAJ,EAAnB;AACA,MAAMC,SAAc,GAAG,IAAID,IAAJ,CAASF,IAAT,CAAvB;AACA,MAAMI,QAAQ,GAAGC,IAAI,CAACC,GAAL,CAASL,KAAK,GAAGE,SAAjB,CAAjB;AACA,MAAMI,QAAQ,GAAGF,IAAI,CAACG,IAAL,CAAUJ,QAAQ,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAAlB,CAAjB;;AACA,MAAKG,QAAQ,IAAI,CAAjB,EAAqB;AACjB,YAAQJ,SAAS,CAACM,MAAV,EAAR;AACI,WAAK,CAAL;AACI,eAAO,QAAP;AACJ;;AACA,WAAK,CAAL;AACI,eAAO,QAAP;AACJ;;AACA,WAAK,CAAL;AACI,eAAO,SAAP;AACJ;;AACA,WAAK,CAAL;AACI,eAAO,WAAP;AACJ;;AACA,WAAK,CAAL;AACI,eAAO,UAAP;AACJ;;AACA,WAAK,CAAL;AACI,eAAO,QAAP;AACJ;;AACA,WAAK,CAAL;AACI,eAAO,UAAP;AACJ;;AACA;AACI,eAAON,SAAS,CAACO,WAAV,GAAwBC,KAAxB,CAA8B,CAA9B,EAAgC,EAAhC,CAAP;AACA;AAxBR;AA0BH,GA3BD,MA2BK;AACD,WAAOR,SAAS,CAACO,WAAV,GAAwBC,KAAxB,CAA8B,CAA9B,EAAgC,EAAhC,CAAP;AACH;AACJ,CAnCM","sourcesContent":["export const formatDate = (date) => {\n    const today: any = new Date()\n    const givenDate: any = new Date(date)\n    const diffTime = Math.abs(today - givenDate)\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24))\n    if ( diffDays <= 7 ) {\n        switch (givenDate.getDay()) {\n            case 0:\n                return 'Sunday';    \n            break;\n            case 1:\n                return 'Monday';    \n            break;\n            case 2:\n                return 'Tuesday';    \n            break;\n            case 3:\n                return 'Wednesday';    \n            break;\n            case 4:\n                return 'Thursday';    \n            break;\n            case 5:\n                return 'Friday';    \n            break;\n            case 6:\n                return 'Saturday';    \n            break;\n            default:\n                return givenDate.toISOString().slice(0,10);    \n                break;\n        }\n    }else{\n        return givenDate.toISOString().slice(0,10);    \n    }\n}"]},"metadata":{},"sourceType":"module"}