{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/frontend/Documents/clones/native/WhatsappCloneReactNative/components/ChatMessage/index.tsx\";\n\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Styles from \"./styles\";\nimport { formatDate } from \"../../helpers\";\n\nvar ChatMessage = function ChatMessage(props) {\n  var message = props.message;\n\n  var isMyMessage = function isMyMessage() {\n    return message.user.id === 'u1';\n  };\n\n  console.log(isMyMessage());\n  return React.createElement(View, {\n    style: Styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: [Styles.messageBox, isMyMessage() ? Styles.sender : Styles.reseiver],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, !isMyMessage() ? React.createElement(Text, {\n    style: Styles.name,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 22\n    }\n  }, message.user.name) : null, React.createElement(Text, {\n    style: Styles.message,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, message.content), React.createElement(Text, {\n    style: Styles.time,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, formatDate(message.createdAt))));\n};\n\nexport default ChatMessage;","map":{"version":3,"sources":["/Users/frontend/Documents/clones/native/WhatsappCloneReactNative/components/ChatMessage/index.tsx"],"names":["React","Styles","formatDate","ChatMessage","props","message","isMyMessage","user","id","console","log","container","messageBox","sender","reseiver","name","content","time","createdAt"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAGA,OAAOC,MAAP;AACA,SAASC,UAAT;;AAOA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAA8B;AAAA,MACtCC,OADsC,GAC1BD,KAD0B,CACtCC,OADsC;;AAG9C,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtB,WAAOD,OAAO,CAACE,IAAR,CAAaC,EAAb,KAAoB,IAA3B;AACH,GAFD;;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAW,EAAvB;AACA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEL,MAAM,CAACU,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CACLV,MAAM,CAACW,UADF,EAELN,WAAW,KAAKL,MAAM,CAACY,MAAZ,GAAqBZ,MAAM,CAACa,QAFlC,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKQ,CAACR,WAAW,EAAZ,GACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEL,MAAM,CAACc,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BV,OAAO,CAACE,IAAR,CAAaQ,IAAzC,CADD,GAEC,IAPT,EASI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEd,MAAM,CAACI,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMA,OAAO,CAACW,OADd,CATJ,EAYI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEf,MAAM,CAACgB,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMf,UAAU,CAACG,OAAO,CAACa,SAAT,CADhB,CAZJ,CADJ,CADJ;AAoBH,CA3BD;;AA6BA,eAAef,WAAf","sourcesContent":["import React from 'react';\nimport { Message } from '../../types';\nimport { Text, View } from 'react-native';\nimport Styles from './styles';\nimport { formatDate } from '../../helpers';\n\n\nexport type ChatMessagesProps = {\n    message: Message\n}\n\nconst ChatMessage = (props: ChatMessagesProps) => {\n    const { message } = props\n    \n    const isMyMessage = () => {\n        return message.user.id === 'u1'\n    }\n    console.log(isMyMessage())\n    return (\n        <View style={Styles.container}>\n            <View style={[\n                    Styles.messageBox,\n                    isMyMessage() ? Styles.sender : Styles.reseiver\n                ]}>\n                {\n                    !isMyMessage()\n                    ?<Text style={Styles.name}>{ message.user.name }</Text>\n                    :null\n                }\n                <Text style={Styles.message}>\n                    { message.content }\n                </Text>\n                <Text style={Styles.time}>\n                    { formatDate(message.createdAt) }\n                </Text>\n            </View>\n        </View>\n    );\n};\n\nexport default ChatMessage;"]},"metadata":{},"sourceType":"module"}