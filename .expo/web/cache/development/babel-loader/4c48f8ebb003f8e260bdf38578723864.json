{"ast":null,"code":"var _jsxFileName = \"/Users/frontend/Documents/clones/native/WhatsappCloneReactNative/navigation/index.tsx\";\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { Octicons, MaterialCommunityIcons, MaterialIcons, FontAwesome5 } from '@expo/vector-icons';\nimport NotFoundScreen from \"../screens/NotFoundScreen\";\nimport ChatRoomScreen from \"../screens/ChatRoomScreen\";\nimport MainTabNavigator from \"./MainTabNavigator\";\nimport LinkingConfiguration from \"./LinkingConfiguration\";\nimport Colors from \"../constants/Colors\";\nimport ContactsScreen from \"../screens/ContactsScreen\";\nexport default function Navigation(_ref) {\n  var colorScheme = _ref.colorScheme;\n  return React.createElement(NavigationContainer, {\n    linking: LinkingConfiguration,\n    theme: colorScheme === 'dark' ? DarkTheme : DefaultTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, React.createElement(RootNavigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }));\n}\nvar Stack = createStackNavigator();\n\nfunction RootNavigator() {\n  var _this = this;\n\n  return React.createElement(Stack.Navigator, {\n    screenOptions: {\n      headerStyle: {\n        backgroundColor: Colors.light.tint,\n        shadowOpacity: 0,\n        elevation: 0\n      },\n      headerTintColor: Colors.light.background,\n      headerTitleAlign: 'left',\n      headerTitleStyle: {\n        fontWeight: 'bold'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Root\",\n    component: MainTabNavigator,\n    options: {\n      title: \"WhatsApp\",\n      headerRight: function headerRight() {\n        return React.createElement(View, {\n          style: {\n            flexDirection: 'row',\n            width: 60,\n            justifyContent: 'space-between',\n            marginRight: 10\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }\n        }, React.createElement(Octicons, {\n          name: \"search\",\n          size: 22,\n          color: 'white',\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }\n        }), React.createElement(MaterialCommunityIcons, {\n          name: \"dots-vertical\",\n          size: 22,\n          color: 'white',\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }\n        }));\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"ChatRoom\",\n    component: ChatRoomScreen,\n    options: function options(_ref2) {\n      var route = _ref2.route;\n      return {\n        title: route.params.name,\n        headerRight: function headerRight() {\n          return React.createElement(View, {\n            style: {\n              flexDirection: 'row',\n              width: 100,\n              justifyContent: 'space-between',\n              marginRight: 10\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 13\n            }\n          }, React.createElement(FontAwesome5, {\n            name: \"video\",\n            size: 22,\n            color: 'white',\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }\n          }), React.createElement(MaterialIcons, {\n            name: \"call\",\n            size: 22,\n            color: 'white',\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }\n          }), React.createElement(MaterialCommunityIcons, {\n            name: \"dots-vertical\",\n            size: 22,\n            color: 'white',\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }\n          }));\n        }\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Contacts\",\n    component: ContactsScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"NotFound\",\n    component: NotFoundScreen,\n    options: {\n      title: 'Oops!'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/frontend/Documents/clones/native/WhatsappCloneReactNative/navigation/index.tsx"],"names":["NavigationContainer","DefaultTheme","DarkTheme","createStackNavigator","React","Octicons","MaterialCommunityIcons","MaterialIcons","FontAwesome5","NotFoundScreen","ChatRoomScreen","MainTabNavigator","LinkingConfiguration","Colors","ContactsScreen","Navigation","colorScheme","Stack","RootNavigator","headerStyle","backgroundColor","light","tint","shadowOpacity","elevation","headerTintColor","background","headerTitleAlign","headerTitleStyle","fontWeight","title","headerRight","flexDirection","width","justifyContent","marginRight","route","params","name"],"mappings":"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","sourcesContent":["import { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\nimport {ColorSchemeName, View} from 'react-native';\nimport {\n  Octicons,\n  MaterialCommunityIcons,\n  MaterialIcons,\n  FontAwesome5,\n} from '@expo/vector-icons';\n\nimport NotFoundScreen from '../screens/NotFoundScreen';\nimport ChatRoomScreen from '../screens/ChatRoomScreen';\nimport { RootStackParamList } from '../types';\nimport MainTabNavigator from './MainTabNavigator';\nimport LinkingConfiguration from './LinkingConfiguration';\nimport Colors from \"../constants/Colors\";\nimport ContactsScreen from \"../screens/ContactsScreen\";\n\n// If you are not familiar with React Navigation, we recommend going through the\n// \"Fundamentals\" guide: https://reactnavigation.org/docs/getting-started\nexport default function Navigation({ colorScheme }: { colorScheme: ColorSchemeName }) {\n  return (\n    <NavigationContainer\n      linking={LinkingConfiguration}\n      theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\n      <RootNavigator />\n    </NavigationContainer>\n  );\n}\n\n// A root stack navigator is often used for displaying modals on top of all other content\n// Read more here: https://reactnavigation.org/docs/modal\nconst Stack = createStackNavigator<RootStackParamList>();\n\nfunction RootNavigator() {\n  return (\n    <Stack.Navigator screenOptions={{\n      headerStyle: {\n        backgroundColor: Colors.light.tint,\n        shadowOpacity: 0,\n        elevation: 0,\n      },\n      headerTintColor: Colors.light.background,\n      headerTitleAlign: 'left',\n      headerTitleStyle: {\n        fontWeight: 'bold',\n      }\n    }}>\n      <Stack.Screen\n        name=\"Root\"\n        component={MainTabNavigator}\n        options={{\n          title: \"WhatsApp\",\n          headerRight: () => (\n            <View style={{\n              flexDirection: 'row',\n              width: 60,\n              justifyContent: 'space-between',\n              marginRight: 10,\n            }}>\n              <Octicons name=\"search\" size={22} color={'white'} />\n              <MaterialCommunityIcons name=\"dots-vertical\" size={22} color={'white'} />\n            </View>\n          )\n        }}\n      />\n      <Stack.Screen\n        name=\"ChatRoom\"\n        component={ChatRoomScreen}\n        options={({ route })  => ({\n          title: route.params.name,\n          headerRight: () => (\n            <View style={{\n              flexDirection: 'row',\n              width: 100,\n              justifyContent: 'space-between',\n              marginRight: 10,\n            }}>\n              <FontAwesome5 name=\"video\" size={22} color={'white'} />\n              <MaterialIcons name=\"call\" size={22} color={'white'} />\n              <MaterialCommunityIcons name=\"dots-vertical\" size={22} color={'white'} />\n            </View>\n          )\n        })}\n      />\n      <Stack.Screen\n        name=\"Contacts\"\n        component={ContactsScreen}\n      />\n      <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\n    </Stack.Navigator>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}