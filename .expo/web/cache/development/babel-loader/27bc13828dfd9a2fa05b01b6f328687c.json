{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/frontend/Documents/clones/native/WhatsappCloneReactNative/components/ChatMessage/index.tsx\";\n\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport moment from \"moment\";\nimport styles from \"./styles\";\n\nvar ChatMessage = function ChatMessage(props) {\n  var message = props.message,\n      myId = props.myId;\n  console.log(props);\n\n  var isMyMessage = function isMyMessage() {\n    return message.userID === myId;\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: [styles.messageBox, {\n      backgroundColor: isMyMessage() ? '#DCF8C5' : 'white',\n      marginLeft: isMyMessage() ? 50 : 0,\n      marginRight: isMyMessage() ? 0 : 50\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, !isMyMessage() && React.createElement(Text, {\n    style: styles.name,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 28\n    }\n  }, message.user.name), React.createElement(Text, {\n    style: styles.message,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, message.content), React.createElement(Text, {\n    style: styles.time,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, moment(message.createdAt).fromNow())));\n};\n\nexport default ChatMessage;","map":{"version":3,"sources":["/Users/frontend/Documents/clones/native/WhatsappCloneReactNative/components/ChatMessage/index.tsx"],"names":["React","moment","styles","ChatMessage","props","message","myId","console","log","isMyMessage","userID","container","messageBox","backgroundColor","marginLeft","marginRight","name","user","content","time","createdAt","fromNow"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAGA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,MAAP;;AAOA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAA6B;AAAA,MACvCC,OADuC,GACrBD,KADqB,CACvCC,OADuC;AAAA,MAC9BC,IAD8B,GACrBF,KADqB,CAC9BE,IAD8B;AAE/CC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;;AACA,MAAMK,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,WAAOJ,OAAO,CAACK,MAAR,KAAmBJ,IAA1B;AACD,GAFD;;AAIA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAACS,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CACXT,MAAM,CAACU,UADI,EACQ;AACjBC,MAAAA,eAAe,EAAEJ,WAAW,KAAK,SAAL,GAAiB,OAD5B;AAEjBK,MAAAA,UAAU,EAAEL,WAAW,KAAK,EAAL,GAAU,CAFhB;AAGjBM,MAAAA,WAAW,EAAEN,WAAW,KAAK,CAAL,GAAS;AAHhB,KADR,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOG,CAACA,WAAW,EAAZ,IAAkB,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEP,MAAM,CAACc,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BX,OAAO,CAACY,IAAR,CAAaD,IAAxC,CAPrB,EAQE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEd,MAAM,CAACG,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BA,OAAO,CAACa,OAAtC,CARF,EASE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEhB,MAAM,CAACiB,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BlB,MAAM,CAACI,OAAO,CAACe,SAAT,CAAN,CAA0BC,OAA1B,EAA3B,CATF,CADF,CADF;AAeD,CAtBD;;AAwBA,eAAelB,WAAf","sourcesContent":["import React from 'react';\nimport {Text, View} from 'react-native';\nimport { Message } from \"../../types\";\nimport moment from \"moment\";\nimport styles from './styles';\n\nexport type ChatMessageProps = {\n  message: Message;\n  myId: String,\n}\n\nconst ChatMessage = (props: ChatMessageProps) => {\n  const { message, myId } = props;\n  console.log(props)\n  const isMyMessage = () => {\n    return message.userID === myId;\n  }\n\n  return (\n    <View style={styles.container}>\n      <View style={[\n        styles.messageBox, {\n          backgroundColor: isMyMessage() ? '#DCF8C5' : 'white',\n          marginLeft: isMyMessage() ? 50 : 0,\n          marginRight: isMyMessage() ? 0 : 50,\n        }\n      ]}>\n        {!isMyMessage() && <Text style={styles.name}>{message.user.name}</Text>}\n        <Text style={styles.message}>{message.content}</Text>\n        <Text style={styles.time}>{moment(message.createdAt).fromNow()}</Text>\n      </View>\n    </View>\n  )\n}\n\nexport default ChatMessage;\n"]},"metadata":{},"sourceType":"module"}