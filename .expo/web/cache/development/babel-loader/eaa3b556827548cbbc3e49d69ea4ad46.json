{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/frontend/Documents/clones/native/WhatsappCloneReactNative/App.tsx\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useEffect } from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport useCachedResources from \"./hooks/useCachedResources\";\nimport useColorScheme from \"./hooks/useColorScheme\";\nimport Navigation from \"./navigation\";\nimport { Auth, API, graphqlOperation } from 'aws-amplify';\nimport { getUser } from \"./graphql/queries\";\nimport { createUser } from \"./graphql/mutations\";\nimport { withAuthenticator } from 'aws-amplify-react-native';\nimport Amplify from 'aws-amplify';\nimport config from \"./aws-exports\";\nAmplify.configure(config);\nvar randomImages = ['https://hieumobile.com/wp-content/uploads/avatar-among-us-2.jpg', 'https://hieumobile.com/wp-content/uploads/avatar-among-us-3.jpg', 'https://hieumobile.com/wp-content/uploads/avatar-among-us-6.jpg', 'https://hieumobile.com/wp-content/uploads/avatar-among-us-9.jpg'];\n\nfunction App() {\n  var isLoadingComplete = useCachedResources();\n  var colorScheme = useColorScheme();\n\n  var getRandomImage = function getRandomImage() {\n    return randomImages[Math.floor(Math.random() * randomImages.length)];\n  };\n\n  useEffect(function () {\n    var fetchUser = function fetchUser() {\n      var userInfo, userData, newUser;\n      return _regeneratorRuntime.async(function fetchUser$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Auth.currentAuthenticatedUser({\n                bypassCache: true\n              }));\n\n            case 2:\n              userInfo = _context.sent;\n\n              if (!userInfo) {\n                _context.next = 13;\n                break;\n              }\n\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(getUser, {\n                id: userInfo.attributes.sub\n              })));\n\n            case 6:\n              userData = _context.sent;\n\n              if (!userData.data.getUser) {\n                _context.next = 10;\n                break;\n              }\n\n              console.log(\"User is already registered in database\");\n              return _context.abrupt(\"return\");\n\n            case 10:\n              newUser = {\n                id: userInfo.attributes.sub,\n                name: userInfo.username,\n                imageUri: getRandomImage(),\n                status: 'Hey, I am using WhatsApp'\n              };\n              _context.next = 13;\n              return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(createUser, {\n                input: newUser\n              })));\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    fetchUser();\n  }, []);\n\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return React.createElement(SafeAreaProvider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, React.createElement(Navigation, {\n      colorScheme: colorScheme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }), React.createElement(StatusBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }));\n  }\n}\n\nexport default withAuthenticator(App);","map":{"version":3,"sources":["/Users/frontend/Documents/clones/native/WhatsappCloneReactNative/App.tsx"],"names":["StatusBar","React","useEffect","SafeAreaProvider","useCachedResources","useColorScheme","Navigation","Auth","API","graphqlOperation","getUser","createUser","withAuthenticator","Amplify","config","configure","randomImages","App","isLoadingComplete","colorScheme","getRandomImage","Math","floor","random","length","fetchUser","currentAuthenticatedUser","bypassCache","userInfo","graphql","id","attributes","sub","userData","data","console","log","newUser","name","username","imageUri","status","input"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,gBAAT,QAAiC,gCAAjC;AAEA,OAAOC,kBAAP;AACA,OAAOC,cAAP;AACA,OAAOC,UAAP;AAEA,SACEC,IADF,EAEEC,GAFF,EAGEC,gBAHF,QAIO,aAJP;AAKA,SAASC,OAAT;AACA,SAASC,UAAT;AAEA,SAASC,iBAAT,QAAkC,0BAAlC;AACA,OAAOC,OAAP,MAAoB,aAApB;AACA,OAAOC,MAAP;AACAD,OAAO,CAACE,SAAR,CAAkBD,MAAlB;AAEA,IAAME,YAAY,GAAG,CACnB,iEADmB,EAEnB,iEAFmB,EAGnB,iEAHmB,EAInB,iEAJmB,CAArB;;AAOA,SAASC,GAAT,GAAe;AACb,MAAMC,iBAAiB,GAAGd,kBAAkB,EAA5C;AACA,MAAMe,WAAW,GAAGd,cAAc,EAAlC;;AAEA,MAAMe,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,WAAOJ,YAAY,CAACK,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBP,YAAY,CAACQ,MAAxC,CAAD,CAAnB;AACD,GAFD;;AAKAtB,EAAAA,SAAS,CAAE,YAAM;AACf,QAAMuB,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACOlB,IAAI,CAACmB,wBAAL,CAA8B;AAAEC,gBAAAA,WAAW,EAAE;AAAf,eAA9B,CADP;;AAAA;AACVC,cAAAA,QADU;;AAAA,mBAGZA,QAHY;AAAA;AAAA;AAAA;;AAAA;AAAA,+CAISpB,GAAG,CAACqB,OAAJ,CACrBpB,gBAAgB,CACdC,OADc,EAEd;AAAEoB,gBAAAA,EAAE,EAAEF,QAAQ,CAACG,UAAT,CAAoBC;AAA1B,eAFc,CADK,CAJT;;AAAA;AAIRC,cAAAA,QAJQ;;AAAA,mBAWVA,QAAQ,CAACC,IAAT,CAAcxB,OAXJ;AAAA;AAAA;AAAA;;AAYZyB,cAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ;AAZY;;AAAA;AAgBRC,cAAAA,OAhBQ,GAgBE;AACdP,gBAAAA,EAAE,EAAEF,QAAQ,CAACG,UAAT,CAAoBC,GADV;AAEdM,gBAAAA,IAAI,EAAEV,QAAQ,CAACW,QAFD;AAGdC,gBAAAA,QAAQ,EAAEpB,cAAc,EAHV;AAIdqB,gBAAAA,MAAM,EAAE;AAJM,eAhBF;AAAA;AAAA,+CAuBRjC,GAAG,CAACqB,OAAJ,CACJpB,gBAAgB,CACdE,UADc,EAEd;AAAE+B,gBAAAA,KAAK,EAAEL;AAAT,eAFc,CADZ,CAvBQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAlB;;AAgCAZ,IAAAA,SAAS;AACV,GAlCQ,EAkCN,EAlCM,CAAT;;AAoCA,MAAI,CAACP,iBAAL,EAAwB;AACtB,WAAO,IAAP;AACD,GAFD,MAEO;AACL,WACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,WAAW,EAAEC,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;AACF;;AAED,eAAeP,iBAAiB,CAACK,GAAD,CAAhC","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, {useEffect} from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\n\nimport useCachedResources from './hooks/useCachedResources';\nimport useColorScheme from './hooks/useColorScheme';\nimport Navigation from './navigation';\n\nimport {\n  Auth,\n  API,\n  graphqlOperation,\n} from 'aws-amplify';\nimport { getUser } from './graphql/queries';\nimport { createUser } from './graphql/mutations';\n\nimport { withAuthenticator } from 'aws-amplify-react-native'\nimport Amplify from 'aws-amplify'\nimport config from './aws-exports'\nAmplify.configure(config)\n\nconst randomImages = [\n  'https://hieumobile.com/wp-content/uploads/avatar-among-us-2.jpg',\n  'https://hieumobile.com/wp-content/uploads/avatar-among-us-3.jpg',\n  'https://hieumobile.com/wp-content/uploads/avatar-among-us-6.jpg',\n  'https://hieumobile.com/wp-content/uploads/avatar-among-us-9.jpg',\n]\n\nfunction App() {\n  const isLoadingComplete = useCachedResources();\n  const colorScheme = useColorScheme();\n\n  const getRandomImage = () => {\n    return randomImages[Math.floor(Math.random() * randomImages.length)];\n  }\n\n  // run this snippet only when App is first mounted\n  useEffect( () => {\n    const fetchUser = async () => {\n      const userInfo = await Auth.currentAuthenticatedUser({ bypassCache: true });\n\n      if (userInfo) {\n        const userData = await API.graphql(\n          graphqlOperation(\n            getUser,\n            { id: userInfo.attributes.sub }\n            )\n        )\n\n        if (userData.data.getUser) {\n          console.log(\"User is already registered in database\");\n          return;\n        }\n\n        const newUser = {\n          id: userInfo.attributes.sub,\n          name: userInfo.username,\n          imageUri: getRandomImage(),\n          status: 'Hey, I am using WhatsApp',\n        }\n\n        await API.graphql(\n          graphqlOperation(\n            createUser,\n            { input: newUser }\n          )\n        )\n      }\n    }\n\n    fetchUser();\n  }, [])\n\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return (\n      <SafeAreaProvider>\n        <Navigation colorScheme={colorScheme} />\n        <StatusBar />\n      </SafeAreaProvider>\n    );\n  }\n}\n\nexport default withAuthenticator(App)\n"]},"metadata":{},"sourceType":"module"}